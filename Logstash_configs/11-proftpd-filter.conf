filter {
  if [program] == "proftpd" {
    grok {
      match => { "message" => "%{MONTH} %{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} %{HOSTNAME:hostname} %{WORD:program}\[%{INT:pid}\] %{IP:ip_host} \(%{IP:ip_src}\[%{IP}\]\): %{GREEDYDATA:message}" }
			tag_on_failure => ["proftpd.log_fail"]
			add_tag => ["proftpd.log"]
    }#end proftpd.log proftpd filter
 
    if("proftpd.log_fail" in [tags]){
			grok {
				match => {"message"=>"%{IP:ip_src} %{WORD} %{WORD:program} \[%{MONTHDAY}/%{MONTH}/%{YEAR}:%{HOUR}:%{MINUTE}:%{SECOND} \+0200\] %{GREEDYDATA:request}"}
				tag_on_failure => ["access.log_fail"]
				add_tag => ["access.log"]
			}#end access.log proftpd filter
		}
		if("proftpd.log_fail" and "access.log_fail" in [tags]){
			grok {
				match => {"message"=>"ACS-Backup \[%{INT:pid}\] %{IP:src_ip} \[%{MONTHDAY}/%{MONTH}/%{YEAR}:%{HOUR}:%{MINUTE}:%{SECOND} \+0200\]%{GREEDYDATA:auth_message}"}
				tag_on_failure => ["auth.log_fail"]
				add_tag => ["auth.log"]
			}#end access.log proftpd filter
		}
    #we drop the events which do not match
    if "_grokparsefailure" in [tags] {
		drop{}
	}
  }#end proftpd filter

}

